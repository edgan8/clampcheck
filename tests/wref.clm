-- @lunit creates a linear unit, @ldispose deallocates it and returns ()
let open = \ u -U> @lunit in
let close = \ f -U> @ldispose f in
let runPar = \ f1 -U> \ f2 -R>
  (f1 (), f2 ()) in

let fref = wnew (open ()) in
let proc = \ u -R> 
  case (release fref) of
    Left  f     -> close f;
    Right dummy -> dummy
  in

runPar proc proc
